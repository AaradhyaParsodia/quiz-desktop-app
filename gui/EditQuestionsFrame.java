/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quizApp.gui;

import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Set;
import javax.swing.JOptionPane;
import quizApp.dao.ExamDao;
import quizApp.dao.QuestionDao;
import quizApp.pojo.Exam;
import quizApp.pojo.QuestionStore;
import quizApp.pojo.Questions;
import quizApp.pojo.UserProfile;

/**
 *
 * @author aaradhya
 */
public class EditQuestionsFrame extends javax.swing.JFrame {

    /**
     * Creates new form EditQuestionsFrame
     */
    
    
    private Exam editExam;
    private QuestionStore quesSet;
    
    private int pos = 0;
    private HashMap<String,String> options;
    
    private int quesNo;
    private int remQues;
    
    private String quesHead;
//    private String title;
    
    private String ques, opt1, opt2, opt3, opt4, crtAns; 
    
    public EditQuestionsFrame() {
        initComponents();
        setLocationRelativeTo(null);
        lblUserName.setText(lblUserName.getText()+" "+UserProfile.getUserName());
        
//        title = lblTitle.getText();
        quesHead = lblQuestionNo.getText();
        
        quesSet = new QuestionStore();
        
        options = new HashMap<>();
        options.put("Option 1", "Answer1");
        options.put("Option 2", "Answer2");
        options.put("Option 3", "Answer3");
        options.put("Option 4", "Answer4");
        
        
    }

    public EditQuestionsFrame(Exam editExam)
    {
        this();
        this.editExam = editExam;
        
        quesNo = 1;
//        remQues = this.editExam.getTotalQuestion() - quesNo + 1;
        
        lblQuestionNo.setText(quesHead+" "+quesNo);
        lblTitle.setText("EDITING "+this.editExam.getLanguage().toUpperCase()+" "+this.editExam.getExamId()+" PAPER");
        
        loadQuestions();
        showQuestion();
    }
    
    private String getKeyFromValue(String value)
    {
        Set <String> keys = options.keySet();
        for(String k : keys)
        {
            String val = options.get(k);
            if(val.equals(value))
                return k;
        }
        return null;
    }
    
    private void showQuestion()
    {
        Questions ques = quesSet.getQuestion(pos);
        
        String question = ques.getQuestion();
        
//        String opt1 = ques.getAnswer1();
//        String opt2 = ques.getAnswer2();
//        String opt3 = ques.getAnswer4();
//        String opt4 = ques.getQuestion();
        
        String crtOpt = ques.getCorrectAnswer();
        
        txtaQuestion.setText(ques.getQuestion());
        txtfOption1.setText(ques.getAnswer1());
        txtfOption2.setText(ques.getAnswer2());
        txtfOption3.setText(ques.getAnswer3());
        txtfOption4.setText(ques.getAnswer4());
        
        cbbAnswer.setSelectedItem(getKeyFromValue(crtOpt));
        
    }
    private void loadQuestions()
    {
        try
        {
            ArrayList<Questions> quesList = QuestionDao.getQuestionsById(editExam.getExamId());
            for(Questions ques: quesList)
            {
                quesSet.addQuestion(ques);
            }
            System.out.println(quesSet);
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "!DB Error!","Edit Questions Frame Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }
    
    private boolean validateInput()
    {
        ques = txtaQuestion.getText().trim();
        opt1 = txtfOption1.getText().trim();
        opt2 = txtfOption2.getText().trim();
        opt3 = txtfOption3.getText().trim();
        opt4 = txtfOption4.getText().trim();
        crtAns = cbbAnswer.getSelectedItem().toString().trim();
        if(ques.isEmpty()||opt1.isEmpty()||opt2.isEmpty()||
                opt3.isEmpty()||opt4.isEmpty()||crtAns.isEmpty())
        {
            return false;
        }
        return true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myHomePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaQuestion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtfOption1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtfOption2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtfOption3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtfOption4 = new javax.swing.JTextField();
        cbbAnswer = new javax.swing.JComboBox<>();
        btnNext = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        lblQuestionNo = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblLogout = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnPrevious = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        myHomePanel.setBackground(new java.awt.Color(0, 0, 0));

        txtaQuestion.setColumns(20);
        txtaQuestion.setRows(5);
        jScrollPane1.setViewportView(txtaQuestion);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 155, 0));
        jLabel3.setText("Option 1 :-");

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 155, 0));
        jLabel4.setText("Option 2 :-");

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 155, 0));
        jLabel5.setText("Option 3 :-");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 155, 0));
        jLabel6.setText("Option 4 :-");

        jLabel7.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 155, 0));
        jLabel7.setText("Correct Answer");

        cbbAnswer.setFont(new java.awt.Font("Calibri Light", 0, 14)); // NOI18N
        cbbAnswer.setMaximumRowCount(4);
        cbbAnswer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Option 1", "Option 2", "Option 3", "Option 4" }));

        btnNext.setBackground(new java.awt.Color(0, 0, 0));
        btnNext.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 155, 0));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 155, 0));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 0, 0));
        btnDone.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        btnDone.setForeground(new java.awt.Color(255, 155, 0));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        lblQuestionNo.setBackground(new java.awt.Color(0, 0, 0));
        lblQuestionNo.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        lblQuestionNo.setForeground(new java.awt.Color(255, 155, 0));
        lblQuestionNo.setText("Question No.: ");

        lblUserName.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(255, 155, 55));
        lblUserName.setText("Hello, ");

        lblLogout.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        lblLogout.setForeground(new java.awt.Color(255, 155, 55));
        lblLogout.setText("Logout");
        lblLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLogoutMouseExited(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 155, 0));
        lblTitle.setText("EDITING QUESTION'S");

        btnPrevious.setBackground(new java.awt.Color(0, 0, 0));
        btnPrevious.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(255, 155, 0));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout myHomePanelLayout = new javax.swing.GroupLayout(myHomePanel);
        myHomePanel.setLayout(myHomePanelLayout);
        myHomePanelLayout.setHorizontalGroup(
            myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(myHomePanelLayout.createSequentialGroup()
                    .addGap(134, 134, 134)
                    .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myHomePanelLayout.createSequentialGroup()
                            .addComponent(txtfOption3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(156, 156, 156)
                            .addComponent(txtfOption4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myHomePanelLayout.createSequentialGroup()
                            .addComponent(txtfOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(156, 156, 156)
                            .addComponent(txtfOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myHomePanelLayout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)))
                    .addGap(129, 129, 129))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myHomePanelLayout.createSequentialGroup()
                    .addGap(66, 66, 66)
                    .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(myHomePanelLayout.createSequentialGroup()
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPrevious)
                            .addGap(61, 61, 61)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(myHomePanelLayout.createSequentialGroup()
                            .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myHomePanelLayout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(13, 13, 13))
                                .addGroup(myHomePanelLayout.createSequentialGroup()
                                    .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(myHomePanelLayout.createSequentialGroup()
                                            .addGap(34, 34, 34)
                                            .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel5)))
                                        .addComponent(lblQuestionNo, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(153, 153, 153)))
                            .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel6)
                                .addGroup(myHomePanelLayout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(cbbAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGap(64, 64, 64)
                    .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(78, 78, 78)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myHomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myHomePanelLayout.createSequentialGroup()
                        .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLogout))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myHomePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)))
                .addContainerGap())
        );
        myHomePanelLayout.setVerticalGroup(
            myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myHomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLogout)
                    .addComponent(lblUserName))
                .addGap(40, 40, 40)
                .addComponent(lblTitle)
                .addGap(95, 95, 95)
                .addComponent(lblQuestionNo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfOption1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfOption2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfOption3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfOption4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(myHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnCancel)
                    .addComponent(btnPrevious)
                    .addComponent(btnDone))
                .addGap(60, 60, 60))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myHomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myHomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed

        if(!validateInput())
        {
            JOptionPane.showMessageDialog(null, "!!Please Enter All Details First!!","Partial Filled Data",JOptionPane.ERROR_MESSAGE);
            return;
        }
        String rightAns = options.get(crtAns);
        Questions quesList = new Questions(editExam.getExamId(),quesNo,ques,opt1,opt2,opt3,opt4,rightAns,editExam.getLanguage());
        quesSet.removeQuestion(pos);
        quesSet.setQuestionAt(pos, quesList);
        
        pos++;
        if(pos >= quesSet.getCount())
        {
            JOptionPane.showMessageDialog(null, "Your Questions have been edited successfully\n Press The DONE Button To Add them into the Database", "Edited Exam Ready", JOptionPane.INFORMATION_MESSAGE);
            System.out.println(quesSet);
            pos = 0;
        }
        showQuestion();
//
//        clearAll();
//
//        --remQues;
//        lblTitle.setText(remQues+title);
        quesNo++;
//
        if(quesNo>quesSet.getCount())
        {
            quesNo = 1;
        }
        lblQuestionNo.setText(quesHead+" "+(quesNo));

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        EditPaperFrame editPaper = new EditPaperFrame();
        editPaper.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed

        if(!validateInput())
        {
            JOptionPane.showMessageDialog(null, "!!Please Enter All Details First!!","Partial Filled Data",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
//        if(quesNo<=newExam.getTotalQuestion())
//        {
//            int count = remQues + 1;
//            JOptionPane.showMessageDialog(null, "You still have "+count+" question remaining","Fill remaining question's",JOptionPane.INFORMATION_MESSAGE);
//            return;
//        }
//
        int result = JOptionPane.showConfirmDialog(null, "Are You Sure That you edited all question. \n Want to Store These Edited Questions.","Confirm ?",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(result==JOptionPane.YES_OPTION)
        {
            try
            {
//                boolean done = ExamDao.addExam(newExam);
//                if(!done)
//                {
//                    JOptionPane.showMessageDialog(null, "!Exam Not Added in the Database!","Please Try Again",JOptionPane.INFORMATION_MESSAGE);
//                    return;
//                }
                QuestionDao.addQuestion(quesSet);
                JOptionPane.showMessageDialog(null, "!Data inserted!","Success",JOptionPane.INFORMATION_MESSAGE);
                AdminOptionFrame adminOption = new AdminOptionFrame();
                adminOption.setVisible(true);
                this.dispose();
            }
            catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "!DB Error!","Edit Questions Frame Error",JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnDoneActionPerformed

    private void lblLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseClicked
        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblLogoutMouseClicked

    private void lblLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseEntered
        lblLogout.setForeground(Color.white);
    }//GEN-LAST:event_lblLogoutMouseEntered

    private void lblLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoutMouseExited
        lblLogout.setForeground(new Color(255,155,0));
    }//GEN-LAST:event_lblLogoutMouseExited

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        
        if(!validateInput())
        {
            JOptionPane.showMessageDialog(null, "!!Please Enter All Details First!!","Partial Filled Data",JOptionPane.ERROR_MESSAGE);
            return;
        }
        String rightAns = options.get(crtAns);
        Questions quesList = new Questions(editExam.getExamId(),quesNo,ques,opt1,opt2,opt3,opt4,rightAns,editExam.getLanguage());
        quesSet.removeQuestion(pos);
        quesSet.setQuestionAt(pos, quesList);
        
        pos--;
        if(pos < 0)
        {
            JOptionPane.showMessageDialog(null, "Your Questions have been edited successfully\n Press The DONE Button To Add them into the Database", "Edited Exam Ready", JOptionPane.INFORMATION_MESSAGE);
            System.out.println(quesSet);
            pos = quesSet.getCount() - 1;
        }
        showQuestion();
//
//        clearAll();
//
//        --remQues;
//        lblTitle.setText(remQues+title);
        quesNo--;
//
        if(quesNo <= 0)
        {
            quesNo = quesSet.getCount();
        }
        lblQuestionNo.setText(quesHead+" "+(quesNo));

    }//GEN-LAST:event_btnPreviousActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditQuestionsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditQuestionsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JComboBox<String> cbbAnswer;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLogout;
    private javax.swing.JLabel lblQuestionNo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JPanel myHomePanel;
    private javax.swing.JTextArea txtaQuestion;
    private javax.swing.JTextField txtfOption1;
    private javax.swing.JTextField txtfOption2;
    private javax.swing.JTextField txtfOption3;
    private javax.swing.JTextField txtfOption4;
    // End of variables declaration//GEN-END:variables
}
